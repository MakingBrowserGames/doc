#!/usr/bin/env bash
##
## The example code has been written and organized for browsing and
## insertion into other documents, this script creates the necessary
## application scaffolding to run them easily.
##
DOC_ROOT=$(cd -P $(dirname "$0") && cd .. && pwd)
EXAMPLE_ROOT="$DOC_ROOT/examples"
EXAMPLE_API_ROOT="$EXAMPLE_ROOT/api"
EXAMPLE_OUT="$EXAMPLE_ROOT/out"
GC_BIN=$(which tealeaf)

function print_help {
		echo "Usage: $(basename $0) [options]"
		echo " -o=dir   Output directory. Default: $EXAMPLE_OUT"
		echo " -h       Print this help."
}

function wrap_app {
		local src_path="$1" app_out="Application.js"

		#assume we're in the correct directory
		echo "exports = Class(GC.Application, function () {"  > "$app_out"
		echo "  this._settings = {"													 >> "$app_out"
		echo "    alwaysRepaint: true"											 >> "$app_out"
		echo "  };"																					 >> "$app_out"
		echo "  this.initUI = function () {"								 >> "$app_out"

		cat "$src_path"	>> "$app_out"

		echo "  };"																					 >> "$app_out"
		echo "});"																					 >> "$app_out"
}

function create_project {
		local project_path="$1"
		local project_root=$(dirname "$project_path")
		local project_name=$(basename "$project_path")

		if [ -d "$project_path" ]; then
				echo "Error: $project_path already exists. Aborting."
				exit 1
		fi

		cd "$project_root"
		$GC_BIN startproject -t empty "$project_name" > /dev/null 2> /dev/null
}

function create_file_project {
		local src_path="$1"
		local project_path="$EXAMPLE_OUT/$(basename $src_path '.js')"

		create_project "$project_path"
		cp "$src_path" "$project_path/shared/Application.js"
}

function create_api_project {
		local src_path="$1"
		local project_path="$EXAMPLE_OUT/api/$(basename $src_path '.js')"

		create_project "$project_path"
		cd "$project_path/shared"
		wrap_app "$src_path"
}

function format_name {
		local name="$1" tab="\t"
		if [ "${#name}" -lt 12 ]; then
				tab="$tab\t"
		fi
		echo -ne "    $name$tab... "
}

## main

while getopts "o:h" opt; do
    case $opt in
				o) EXAMPLE_OUT="$OPTARG";;
				h) print_help; exit 0;;
        \?) print_help; exit 0;;
    esac
done

if [ ! -x "$GC_BIN" ]; then
		echo "Error: Can't find tealeaf."
		exit 1
fi

if [ -d "$EXAMPLE_OUT" ]; then
		echo "  Removing previous contents in $EXAMPLE_OUT"
		rm -rf "$EXAMPLE_OUT"
fi
mkdir -p "$EXAMPLE_OUT"

echo "  Creating example apps in $EXAMPLE_OUT"
#non-directory examples are assumed to be the app's shared/Application.js file
while read src_path; do
		format_name $(basename "$src_path" '.js')
		create_file_project "$src_path"
		echo "done"
done < <(find "$EXAMPLE_ROOT" -depth 1 -type f -name '*.js')

#just copy directory examples
while read src_path; do
		format_name $(basename "$src_path")
		cp -r "$src_path" "$EXAMPLE_OUT"
		echo "done"
done < <(find "$EXAMPLE_ROOT" -depth 1 -type d | grep -v 'api' | grep -v 'out' | grep -v 'old')

echo "  Creating API example apps in $EXAMPLE_OUT/api"
mkdir -p "$EXAMPLE_OUT/api"
while read src_path; do
		format_name $(basename "$src_path" '.js')
		create_api_project "$src_path"
		echo "done"
done < <(find "$EXAMPLE_API_ROOT" -type f -name '*.js')
